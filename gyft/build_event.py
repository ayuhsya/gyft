from icalendar import Calendar, Event
import pytz
from datetime import datetime

cal = Calendar()
cal.add('prodid', '-//Your Timetable generated by GYFT//mxm.dk//')
cal.add('version', '1.0')

def build_event(summary, description, start, end, location,
        freq_of_recurrence, until):

    '''
    Return an event that can be added to a calendar

    summary: summary of the event
    description: description of the event
    location: self explanatory
    start, end, stamp: These are datetime.datetime objects
    freq_of_recurrence: frequency of recurrence, string which can take the
    values daily, weekly, monthly, etc.
    until: A datetime.datetime object which signifies when the recurrence will
    end
    '''

    event = Event()
    event.add('summary', summary)
    event.add('description', description)
    event.add('dtstart', start)
    event.add('dtend', end)
    event.add('dtstamp', datetime.now())
    event.add('location', location)
    event.add('rrule', { 'FREQ': freq_of_recurrence, 'UNTIL': until})

    return event

def generateIndiaTime(year, month, date, hour, minutes):

    return datetime(year, month, date, hour, minutes, tzinfo=pytz.timezone('Asia/Kolkata'))

if __name__ == '__main__':

    example_event = build_event(
        "example event", 
        "example event's description 2!",
        generateIndiaTime(2016, 8, 22, 19, 0), 
        generateIndiaTime(2016, 8, 22, 20, 0), 
        "imaginary location!",
        "weekly",
        generateIndiaTime(2016, 11, 20, 12, 0))

    cal.add_component(example_event)

    with open('timetable.ics', 'wb') as f:
            f.write(cal.to_ical())
